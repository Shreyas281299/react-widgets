name: Pull Request CI
run-name: ${{ github.actor }} is running Pull Request CI

on:
  pull_request_target:
    types: [opened, labeled, reopened, synchronize]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  install:
    runs-on: ubuntu-latest
    env:
      AWS_BUCKET: code.s4d.io
      AWS_REGION: us-east-1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.13.1

      - name: Clean npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm ci --force

      - name: Save NPM install log
        run: npm ls --json > npm_install.log || true

      - name: Upload NPM install log as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: npm-install-log
          path: npm_install.log

  unit_tests_and_linting:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.13.1

      - name: Uncache Dependencies
        uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: node-modules-${{ hashFiles('./yarn.lock') }}

      - name: Run eslint
        run: npm run eslint -- --format junit -o reports/junit/js-lint-results.xml

      - name: Run Jest test suites
        env:
          JEST_JUNIT_OUTPUT_NAME: js-jest-results.xml
          JEST_JUNIT_OUTPUT_DIR: reports/junit/jest
        run: npm run jest -- --ci -i --reporters="jest-junit"

      - name: Upload Jest test results
        uses: actions/upload-artifact@v3
        with:
          name: junit-test-results
          path: reports/junit

  build_for_tests:
    runs-on: ubuntu-latest
    needs: install
    env:
      FEDERATION: true
      NODE_ENV: test
      WEBEX_TEST_USERS_CONVERSATION_SERVICE_URL: https://conversation-intb.ciscospark.com/conversation/api/v1
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.13.1

      - name: Build for test
        run: npm run build journey dist-test

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-test
          path: dist-test

  journey_tests_chrome:
    runs-on: ubuntu-latest
    needs: build_for_tests
    env:
      SAUCE: true
      STATIC_SERVER_PATH: dist-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.13.1

      - name: Run integration tests on Chrome
        run: BROWSER=chrome npm run test:integration

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-results
          path: reports/junit/wdio
